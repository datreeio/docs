import uuid from "react-uuid";

export const tabsItems = [
  { value: "containers", label: "Containers" },
  { value: "workload", label: "Workload" },
  { value: "cronjob", label: "CronJob" },
  { value: "networking", label: "Networking" },
  { value: "security", label: "Security" },
  { value: "deprecation", label: "Deprecation" },
  { value: "argo", label: "Argo" },
  { value: "NSA", label: "NSA"},
  { value: "secrets", label: "Secrets"},
  { value: "other", label: "Other" },
];

export const navItems = [
  {
    id: uuid(),
    title: "Ensure each container image has a pinned (tag) version",
    slug: "/built-in-rules/ensure-image-pinned-version",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container has a configured memory request",
    slug: "/built-in-rules/ensure-memory-request",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container has a configured CPU request",
    slug: "/built-in-rules/ensure-cpu-request",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container has a configured memory limit",
    slug: "/built-in-rules/ensure-memory-limit",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },

  {
    id: uuid(),
    title: "Ensure each container has a configured CPU limit",
    slug: "/built-in-rules/ensure-cpu-limit",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container has a configured liveness probe",
    slug: "/built-in-rules/ensure-liveness-probe",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container has a configured readiness probe",
    slug: "/built-in-rules/ensure-readiness-probe",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from having root access capabilities",
    slug: "/built-in-rules/prevent-privileged-containers",
    isEnabledByDefault: true,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container image has a digest tag",
    slug: "/built-in-rules/ensure-digest-tag",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from sharing the host's PID namespace",
    slug: "/built-in-rules/prevent-using-host-pid",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from sharing the host's IPC namespace",
    slug: "/built-in-rules/prevent-using-host-ipc",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from sharing the host's network namespace",
    slug: "/built-in-rules/prevent-using-host-network",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from accessing host files by using high UIDs",
    slug: "/built-in-rules/prevent-uid-conflicts",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Prevent containers from mounting Docker socket",
    slug: "/built-in-rules/prevent-mounting-docker-socket",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has an initial delay configured",
    slug: "/built-in-rules/ensure-initial-probe-delay",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has a configured frequency",
    slug: "/built-in-rules/ensure-probe-frequency",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has a configured timeout",
    slug: "/built-in-rules/ensure-probe-timeout",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has a configured minimum success threshold",
    slug: "/built-in-rules/ensure-probe-min-success-threshold",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has a configured failure threshold",
    slug: "/built-in-rules/ensure-probe-failure-threshold",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  {
    id: uuid(),
    title: "Ensure each container probe has a configured prestop hook",
    slug: "/built-in-rules/ensure-prestop",
    isEnabledByDefault: false,
    tabOwner: ["containers"],
  },
  // workload
  {
    id: uuid(),
    title: "Ensure workload has valid label values",
    slug: "/built-in-rules/ensure-labels-value-valid",
    isEnabledByDefault: true,
    tabOwner: ["workload"],
  },
  {
    id: uuid(),
    title: "Ensure deployment-like resource is using a valid restart policy",
    slug: "/built-in-rules/ensure-valid-restart-policy",
    isEnabledByDefault: true,
    tabOwner: ["workload"],
  },
  {
    id: uuid(),
    title: "Prevent workload from using the default namespace",
    slug: "/built-in-rules/prevent-deafult-namespce",
    isEnabledByDefault: true,
    tabOwner: ["workload"],
  },
  {
    id: uuid(),
    title: "Ensure Deployment has more than one replica configured",
    slug: "/built-in-rules/ensure-minimum-two-replicas",
    isEnabledByDefault: true,
    tabOwner: ["workload"],
  },
  {
    id: uuid(),
    title: "Ensure workload has a configured `owner` label",
    slug: "/built-in-rules/ensure-owner-label",
    isEnabledByDefault: false,
    tabOwner: ["workload"],
  },
  {
    id: uuid(),
    title: "Ensure Deployment has a configured `env` label",
    slug: "/built-in-rules/ensure-env-label",
    isEnabledByDefault: false,
    tabOwner: ["workload"],
  },
  //CronJob
  {
    id: uuid(),
    title: "Ensure CronJob scheduler is valid",
    slug: "/built-in-rules/ensure-cronjob-scheduler-valid",
    isEnabledByDefault: true,
    tabOwner: ["cronjob"],
  },
  {
    id: uuid(),
    title: "Ensure CronJob has a configured deadline",
    slug: "/built-in-rules/ensure-cronjob-deadline",
    isEnabledByDefault: true,
    tabOwner: ["cronjob"],
  },
  {
    id: uuid(),
    title: "Prevent CronJob from executing jobs concurrently",
    slug: "/built-in-rules/prevent-cronjob-concurrency",
    isEnabledByDefault: false,
    tabOwner: ["cronjob"],
  },
  // Networking
  {
    id: uuid(),
    title: "Prevent Ingress from forwarding all traffic to a single container",
    slug: "/built-in-rules/prevent-ingress-forwarding-traffic-to-single-container",
    isEnabledByDefault: true,
    tabOwner: ["networking"],
  },
  {
    id: uuid(),
    title: "Prevent Service from exposing node port",
    slug: "/built-in-rules/prevent-node-port",
    isEnabledByDefault: true,
    tabOwner: ["networking"],
  },
  // Security
  {
    id: uuid(),
    title:
      "Prevent EndpointSlice validation from enabling host network hijack (CVE-2021-25737)",
    slug: "/built-in-rules/prevent-endpointslice-validation-from-enabling-host-network-hijack-cve-2021-25737",
    isEnabledByDefault: false,
    tabOwner: ["security"],
  },
  {
    id: uuid(),
    title: "Prevent container security vulnerability (CVE-2021-25741)",
    slug: "/built-in-rules/prevent-container-security-vulnerability-cve-2021-25741",
    isEnabledByDefault: false,
    tabOwner: ["security"],
  },
  {
    id: uuid(),
    title: "Prevent Ingress security vulnerability (CVE-2021-25742)",
    slug: "/built-in-rules/prevent-ingress-security-vulnerability-cve-2021-25742",
    isEnabledByDefault: false,
    tabOwner: ["security"],
  },
  {
    id: uuid(),
    title: "Prevent ConfigMap security vulnerability (CVE-2021-25742)",
    slug: "/built-in-rules/prevent-configmap-security-vulnerability-cve-2021-25742",
    isEnabledByDefault: false,
    tabOwner: ["security"],
  },
  // Deprecation
  {
    id: uuid(),
    title: "Prevent deprecated APIs in Kubernetes v1.16",
    slug: "/built-in-rules/prevent-deprecated-k8s-api-116",
    isEnabledByDefault: true,
    tabOwner: ["deprecation"],
  },
  {
    id: uuid(),
    title: "Prevent deprecated APIs in Kubernetes v1.17",
    slug: "/built-in-rules/prevent-deprecated-k8s-api-117",
    isEnabledByDefault: true,
    tabOwner: ["deprecation"],
  },
  // Argo
  {
    id: uuid(),
    title: "Ensure Workflow DAG fail-fast on node failure",
    slug: "/built-in-rules/ensure-workflow-dag-fail-fast-on-node-failure",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Prevent Workflow pods from using the default service account",
    slug: "/built-in-rules/prevent-workflow-pods-from-using-the-default-service-account",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure ConfigMap is recognized by ArgoCD",
    slug: "/built-in-rules/ensure-configmap-is-recognized-by-argocd",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Rollout pause step has a configured duration",
    slug: "/built-in-rules/ensure-rollout-pause-step-has-a-configured-duration",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Application and AppProject are part of the argocd namespace",
    slug: "/built-in-rules/ensure-application-and-appproject-are-part-of-the-argocd-namespace",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Prevent Workflow from having an empty retry strategy",
    slug: "/built-in-rules/prevent-workflow-from-having-an-empty-retry-strategy",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Rollout has revision history set",
    slug: "/built-in-rules/ensure-rollout-has-revision-history-set",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Rollout allows broadcasting IP table changes",
    slug: "/built-in-rules/ensure-rollout-allows-broadcasting-ip-table-changes",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Rollout that is marked as degraded scales down ReplicaSet",
    slug: "/built-in-rules/ensure-rollout-that-is-marked-as-degraded-scales-down-replicaset",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  {
    id: uuid(),
    title: "Ensure Workflow retry policy catches relevant errors only",
    slug: "/built-in-rules/ensure-workflow-retry-policy-catches-relevant-errors-only",
    isEnabledByDefault: true,
    tabOwner: ["argo"],
  },
  // NSA
  {
    id: uuid(),
    title: "Ensure each container has a read-only root filesystem",
    slug: "/built-in-rules/ensure-read-only-filesystem",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from accessing host files by using high GIDs",
    slug: "/built-in-rules/prevent-accessing-host-files-by-using-high-gids",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from accessing the underlying host",
    slug: "/built-in-rules/prevent-accessing-underlying-host",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from allowing command execution",
    slug: "/built-in-rules/prevent-allowing-command-execution",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from escalating privileges",
    slug: "/built-in-rules/prevent-escalating-privileges",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from having insecure capabilities",
    slug: "/built-in-rules/prevent-insecure-capabilities",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent containers from insecurely exposing workload",
    slug: "/built-in-rules/prevent-insecurely-exposing-workload",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent container from running with root privileges",
    slug: "/built-in-rules/prevent-running-with-root-privileges",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  {
    id: uuid(),
    title: "Prevent service account token auto-mounting on pods",
    slug: "/built-in-rules/prevent-service-account-token-auto-mount",
    isEnabledByDefault: true,
    tabOwner: ["NSA"],
  },
  // secrets
  {
    id: uuid(),
    title: "Prevent exposed BitBucket secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-bitbucket",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Datadog secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-datadog",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed GCP secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-gcp",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed AWS secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-aws",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Github secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-github",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Gitlab secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-gitlab",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Hashicorp Terraform secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-hashicorp",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Heroku secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-heroku",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed JWT secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-jwt",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed LaunchDarkly secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-launchdarkly",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed New Relic secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-newrelic",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed npm secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-npm",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Okta secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-okta",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Stripe secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-stripe",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed SumoLogic secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-sumologic",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Twilio secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-twilio",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed Vault secrets in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-vault",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  {
    id: uuid(),
    title: "Prevent exposed private keys in objects",
    slug: "/built-in-rules/prevent-exposed-secrets-privatekey",
    isEnabledByDefault: true,
    tabOwner: ["secrets"],
  },
  // other
  {
    id: uuid(),
    title: "Ensure resource has a configured name",
    slug: "/built-in-rules/ensure-resource-name",
    isEnabledByDefault: true,
    tabOwner: ["other"],
  },
  {
    id: uuid(),
    title: "Ensure HPA has minimum replicas configured",
    slug: "/built-in-rules/ensure-hpa-minimum-replicas",
    isEnabledByDefault: true,
    tabOwner: ["other"],
  },
  {
    id: uuid(),
    title: "Ensure HPA has maximum replicas configured",
    slug: "/built-in-rules/ensure-hpa-maximum-replicas",
    isEnabledByDefault: false,
    tabOwner: ["other"],
  },
  {
    id: uuid(),
    title: "Prevent deploying naked pods",
    slug: "/built-in-rules/prevent-naked-pods",
    isEnabledByDefault: false,
    tabOwner: ["other"],
  },
];
